{"version":3,"sources":["components/HomePage/style.js","actions/index.js","constants/test_score_data.js","Selectors/index.js","components/HomePage/DataSourceSelectionModule.js","services/index.js","utils/helper.js","components/HomePage/DataViewer.js","components/HomePage/index.js","App.js","registerServiceWorker.js","reducers/index.js","index.js","configureStore.js"],"names":["base","actionType","StyledWrapper","styled","div","StyledSourceData","StyledDataWrapper","StyleProgressBar","props","width","StyledActionButtonWrapper","REQUEST","SUCCESS","FAILURE","action","type","payload","GET_ALL_SCORE","reduce","acc","getAllScoresAction","request","success","data","failure","test_score_data","country","score","getAllScores","state","isTest","_get","isScoresDataFetching","DATA_SOURCE","value","name","connect","s__allScoresData","s__isScoresFetching","dispatch","d__getAllScores","axios","get","CORS_BYPASS","then","response","catch","e","getAllScoresService","source","setSource","useEffect","map","val","i","key","className","id","readOnly","onClick","checked","htmlFor","getTotalScore","a","b","formatServerData","length","DataViewer","scoreData","useState","average","setAvg","countryName","setCountry","calculateHighest","Math","max","getHighestScore","round","getAvg","filter","toLowerCase","barWidth","onChange","string","target","replace","dataRow","setDataRow","updateRow","Array","disabled","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","initialState","isFetching","rootReducer","combineReducers","allScoresData","store","createStore","reducers","applyMiddleware","thunk","configureStore","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.da1f2b19.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledWrapper = styled.div`\n    .data-row {\n        margin-bottom: 15px;\n    }\n`;\n\nexport const StyledSourceData = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 10px 0;\n    border: 2px solid #dedede;\n    margin: 10px 0; \n`;\n\nexport const StyledDataWrapper = styled.div`\n    .row {\n        clear: both;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n    \n    .country .country-input {\n        flex: 1;\n        margin-left: 2px;\n    }\n    \n    .cmn-cls {\n        display: flex;\n        float: left;\n        width: 250px;\n        margin: 5px 20px;\n    }\n    @media screen and (min-width: 600px) and (max-width: 900px) {\n        .cmn-cls {\n            width: 200px;\n            margin: 0;\n            padding: 5px 10px;\n        }\n        .country .country-input {\n            max-width: 120px;\n        }\n    }\n    @media screen and (max-width: 600px) {\n        .row {\n            flex-direction: column;\n            padding-bottom: 20px;\n            border-bottom: 2px solid #cecece;\n        }\n        .cmn-cls {\n            width: 300px;\n        }\n    }\n`;\n\nexport const StyleProgressBar = styled.div`\n    width: 100%;\n    height: 30px;\n    float: left;\n    display: inline-block;\n    border: 5px solid black;\n    .progress-bar {\n        height: 100%;\n        width: ${props => props.width || 0}%;\n        background-color: blue;\n        transition: 0.5s ease-in-out;\n    }\n`;\n\nexport const StyledActionButtonWrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    button {\n        margin: 5px;\n        background: #fff;\n        border: 1px solid #6e6e6e;\n        border-radius: 5px;\n        cursor: pointer;\n        padding: 3px 10px;\n    }\n`;\n","export const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\n\nconst createRequestTypes = base => {\n    return [REQUEST, SUCCESS, FAILURE].reduce((acc, type) => {\n        acc[type] = `${base}_${type}`;\n        return acc;\n    }, {});\n};\n\nconst action = (type, payload = {}) => {\n    return { type, ...payload };\n};\n\nexport const GET_ALL_SCORE = createRequestTypes('GET_ALL_SCORE');\n\nconst formattedAction = (actionType) => ({\n   request: () => action(actionType[REQUEST]),\n   success: (data) => action(actionType[SUCCESS], data),\n   failure: () => action(actionType[FAILURE]),\n});\n\nexport const getAllScoresAction = formattedAction(GET_ALL_SCORE);\n\n","export const test_score_data = [\n    {country: \"Pakistan\", score: 23},\n    {country: \"Pakistan\", score: 127},\n    {country: \"India\", score: 3},\n    {country: \"India\", score: 71},\n    {country: \"Australia\", score: 31},\n    {country: \"India\", score: 22},\n    {country: \"Pakistan\", score: 81},\n];\n","import _get from \"lodash/get\";\nimport {test_score_data} from \"../constants/test_score_data\";\n\nexport const getAllScores = (state, isTest) => isTest ? test_score_data : _get(state, \"allScoresData.data\", []);\nexport const isScoresDataFetching = state => _get(state, \"allScoresData.isFetching\", false);\n","import React, {useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {getAllScoresService} from \"../../services\";\nimport {getAllScores, isScoresDataFetching} from \"../../Selectors\";\nimport {StyledSourceData} from \"./style\";\n\nconst DATA_SOURCE = [\n    {value: \"test\", name: \"Test Data\"},\n    {value: \"server\", name: \"Server Data\"},\n];\n\nconst DataSourceSelectionModule = (props) => {\n    const {\n        source,\n        setSource,\n        d__getAllScores\n    } = props;\n    useEffect(() => {\n        if (source === \"server\") {\n            d__getAllScores();\n        }\n    }, [source, d__getAllScores]);\n    return (\n        <StyledSourceData>\n            Source of data:\n            <div>\n                {DATA_SOURCE.map((val, i) => {\n                    const {\n                        value,\n                        name\n                    } = val;\n                    return (\n                        <span key={i}>\n                        <input className={\"cursor_pointer\"} id={`src-${value}`} type=\"radio\" readOnly={true}\n                               onClick={() => setSource(value)}\n                               name=\"data-source\" value={value} checked={value === source}/>\n                        <label className={\"cursor_pointer\"} htmlFor={`src-${value}`}>{name}</label>\n                    </span>\n                    )\n                })}\n            </div>\n        </StyledSourceData>\n    )\n};\n\nDataSourceSelectionModule.propTypes = {\n    d__getAllScores: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    s__allScoresData: getAllScores(state),\n    s__isScoresFetching: isScoresDataFetching(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    d__getAllScores: () => getAllScoresService()(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataSourceSelectionModule)\n","import axios from \"axios\";\nimport {getAllScoresAction} from \"../actions/index\";\n\nexport const CORS_BYPASS = \"https://cors-anywhere.herokuapp.com/\";\nexport const GET_ALL_SCORES_API = \"http://assessments.reliscore.com/static/misc/cric_scores.json\";\n\nexport const getAllScoresService = () => {\n    return (dispatch) => {\n        dispatch(getAllScoresAction.request());\n        axios.get(CORS_BYPASS + GET_ALL_SCORES_API)\n            .then(response =>\n                dispatch(getAllScoresAction.success({data: response.data}))\n            )\n            .catch(e => dispatch(getAllScoresAction.failure(e)));\n    }\n}\n","export const getHighestScore = (data = []) => data.reduce((a, b) => Math.max(a, b.score), 0);\n\nexport const getTotalScore = (data = []) => data.reduce((a, b) => a + b.score, 0);\n\nexport const getAvg = (data = []) => Math.round((getTotalScore(data)/data.length) * 100) / 100;\n\nexport const formatServerData = (data = []) => data && data.length ? data.map(val => {\n    let [country, score] = val;\n    return ({country, score})\n}) : [];\n\nexport const trimLeft = string =>\n    string ? string.replace(/^\\s+/, \"\") : string;\n","import React, {useEffect, useState} from \"react\";\nimport {StyledDataWrapper, StyleProgressBar} from \"./style\";\nimport {getAvg, getHighestScore, trimLeft} from \"../../utils/helper\";\n\nconst DataViewer = ({scoreData}) => {\n    const [average, setAvg] = useState(0);\n    const [countryName, setCountry] = useState(\"\");\n    const calculateHighest = getHighestScore(scoreData);\n    useEffect(() => {\n        setAvg(getAvg(scoreData.filter(val => val.country.toLowerCase() === countryName.toLowerCase())))\n    }, [countryName, scoreData]);\n\n\n    const barWidth = (average / calculateHighest) * 100;\n    return (\n        scoreData.length ?\n            <StyledDataWrapper>\n                <div className={\"row\"}>\n                    <div className={\"cmn-cls country\"}>\n                        The Country: <input onChange={e => setCountry(trimLeft(e.target.value))}\n                                            className={\"country-input\"} type=\"text\" value={countryName}/>\n                    </div>\n                    <div className={\"cmn-cls average\"}>\n                        The Average: {average || \"-\"}\n                    </div>\n                    <div className={\"cmn-cls progress\"}>\n                        <StyleProgressBar width={barWidth || 0}>\n                                <div className={\"progress-bar\"}/>\n                        </StyleProgressBar>\n                    </div>\n                </div>\n            </StyledDataWrapper> : <div>NO DATA AVAILABLE</div>\n    )\n};\n\nexport default DataViewer;\n","import React, {useState} from \"react\";\nimport {StyledActionButtonWrapper, StyledWrapper} from \"./style\";\nimport DataSourceSelectionModule from \"./DataSourceSelectionModule\";\nimport DataViewer from \"./DataViewer\";\nimport {getAllScores, isScoresDataFetching} from \"../../Selectors\";\nimport {connect} from \"react-redux\";\n\nconst HomePage = ({s__allScoresData}) => {\n    const [dataRow, setDataRow] = useState(2);\n    const [source, setSource] = useState(\"test\");\n    const updateRow = (val) => {\n        setDataRow(Math.max(0, (dataRow+val)))\n    };\n    return (\n        <StyledWrapper>\n            <DataSourceSelectionModule source={source} setSource={setSource} />\n            {[...new Array(dataRow)].map((val, i) =>\n                <div key={i} className={\"data-row\"}>\n                    <DataViewer scoreData={s__allScoresData(source === \"test\")}/>\n                </div>)}\n            <StyledActionButtonWrapper>\n                <button disabled={dataRow <= 1} onClick={() => updateRow(-1)}>-</button>\n                <button onClick={() => updateRow(1)}>+</button>\n            </StyledActionButtonWrapper>\n        </StyledWrapper>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    s__allScoresData: (isTest = true) => getAllScores(state, isTest),\n    s__isScoresFetching: isScoresDataFetching(state),\n});\n\nexport default connect(mapStateToProps, null)(HomePage);\n","import React from 'react';\nimport './App.css';\nimport HomePage from \"./components/HomePage\";\n\n\nconst App  = () => {\n    return (\n      <div className=\"App\">\n        <div className=\"headline\">\n          <h1 className={\"text_ff671d\"}>My Cricket Score</h1>\n        </div>\n        <div className=\"pageComponents\">\n            <HomePage />\n        </div>\n      </div>\n    );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport {REQUEST, GET_ALL_SCORE, SUCCESS, FAILURE} from '../actions'\nimport {formatServerData} from \"../utils/helper\";\n\nconst initialState = {\n    isFetching: false,\n    data: [],\n};\n\nconst allScoresData = (state = {...initialState}, action) => {\n    switch (action.type) {\n        case GET_ALL_SCORE[REQUEST]:\n            return {...state, isFetching: true};\n\n        case GET_ALL_SCORE[SUCCESS]:\n            return {\n                data: formatServerData(action.data), isFetching: false\n            };\n\n        case GET_ALL_SCORE[FAILURE]:\n            return {...state, isFetching: false};\n\n        default:\n            return state;\n\n    }\n\n};\n\nconst rootReducer = combineReducers({\n    allScoresData\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n  </Provider>, document.getElementById('root'));\nregisterServiceWorker();\n","import {applyMiddleware, createStore} from \"redux\";\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst configureStore = () => {\n    return createStore(\n        reducers,\n        applyMiddleware(thunk)\n    )};\n\nexport default configureStore;\n"],"sourceRoot":""}